apiVersion: apps/v1
kind: Deployment
metadata:
 name: pacman-k8s
 labels:
   app: pacman-k8s
spec:
 replicas: 1
 selector:
   matchLabels:
     app: pacman-k8s
 template:
   metadata:
     labels:
       app: pacman-k8s
   spec:
     containers:
       - name: pacman-k8s-gcp
         image: gcr.io/core-crossing-400204/hong0163215089/pack8s:GITHUB_SHA
         imagePullPolicy: Always
         ports:
           - containerPort: 8080
         readinessProbe:
           httpGet:
             path: /
             port: 8080
           initialDelaySeconds: 5
           timeoutSeconds: 5
           periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pacman-k8s-service
  labels:
    app: pacman-k8s
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: pacman-k8s

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: Deny";
      more_set_headers "X-Xss-Protection: 1; mode=block";
      more_set_headers "X-Content-Type-Options: nosniff";
spec:
  rules:
    - host: microservices.cloudageskill.com
      http:
        paths:
        - backend:
            service:
              name: python-app-service
              port: 
                number: 8080
          path: /
          pathType: ImplementationSpecific