
# name: Deploy Nodejs

# on:
#   push:
#     branches:
#     - 'github-gcp'

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     env:
#       IMAGE_NAME: hong0163215089/pack8s
#       PROJECT_ID: core-crossing-400204

#     steps:

#     - name: checkout
#       uses: actions/checkout@v2

#     - name: install the gcloud cli
#       uses: google-github-actions/setup-gcloud@v0
#       with:
#         project_id: ${{ env.PROJECT_ID }}
#         service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#         install_components: 'gke-gcloud-auth-plugin'
#         export_default_credentials: true

#     - name: build and push the docker image
#       env:
#         GOOGLE_PROJECT: ${{ env.PROJECT_ID }}
#       run: |-
#         gcloud auth configure-docker us-central1-docker.pkg.dev
#         docker build -t us-central1-docker.pkg.dev/$GOOGLE_PROJECT/pacman/$PROJECT_ID/$IMAGE_NAME:latest --no-cache -f docker/Dockerfile  .
#         docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/pacman/$PROJECT_ID/$IMAGE_NAME:latest 
#     - name: deploy to gke
#       env:
#         GOOGLE_PROJECT: ${{ env.PROJECT_ID }}
#       run: |-
#        gcloud container clusters get-credentials pacman --region us-central1
#         sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" app.yaml
#         kubectl apply -f app.yaml




# -name: Build and Push Image to Google Cloud Platform
# on:
#   push:
#     branches: [ github-gcp ]
# jobs:
#   build-push-gcr:
#     name: Build and Push to GCP
#     runs-on: ubuntu-latest
#     env:
#       IMAGE_NAME: hong0163215089/pack8s
#       PROJECT_ID: core-crossing-400204
      
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - uses: google-github-actions/setup-gcloud@v0
#       with:
#         service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#         project_id: ${{ env.PROJECT_ID }}
#         export_default_credentials: true

#     - name: Build Docker Image
#       run: docker build . -t $IMAGE_NAME  --no-cache -f docker/Dockerfile 

#     - name: Configure Docker Client
#       run: |-
#         gcloud auth configure-docker --quiet
#         gcloud auth configure-docker asia-southeast1-docker.pkg.dev --quiet

#     - name: Push Docker Image to Container Registry (GCR)
#       run: |-
#         docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest 
#         docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest

#     - name: Push Docker Image to Artifact Registry (GAR)
#       run: |-
#         docker tag $IMAGE_NAME:latest asia-southeast1-docker.pkg.dev/core-crossing-400204/image/$PROJECT_ID/$IMAGE_NAME:latest 
#         docker push asia-southeast1-docker.pkg.dev/core-crossing-400204/image/$PROJECT_ID/$IMAGE_NAME:latest




# name: Build and Deploy to GKE

# on:
#   push:
#     branches:
#       - github-gcp

# env:
#   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
#   GKE_CLUSTER: pacman   # Add your cluster name here.
#  GKE_ZONE: us-central1-f	   # Add your cluster zone here.
#   DEPLOYMENT_NAME: pacman-k8s # Add your deployment name here.
#   IMAGE: hong0163215089/pacman-k8s

# jobs:
#   setup-build-publish-deploy:
#     name: Setup, Build, Publish, and Deploy
#     runs-on: ubuntu-latest
#     environment: production

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     # Setup gcloud CLI
#     - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
#       with:
#         service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#         project_id: ${{ secrets.GKE_PROJECT }}
#         install_components: 'gke-gcloud-auth-plugin'
#         export_default_credentials: true

#     # Configure Docker to use the gcloud command-line tool as a credential
#     # helper for authentication
#     - run: |-
#         gcloud --quiet auth configure-docker

#     # Get the GKE credentials so we can deploy to the cluster
#     - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
#       with:
#         cluster_name: ${{ env.GKE_CLUSTER }}
#         location: ${{ env.GKE_ZONE }}
#         credentials: ${{ secrets.SERVICE_ACCOUNT_KEY }}

#     # Build the Docker image
#     - name: Build
#       run: |-
#         docker build -t gcr.io/${{ secrets.GKE_PROJECT }}/${{ env.IMAGE }}:$GITHUB_SHA --no-cache -f docker/Dockerfile \
#           --build-arg GITHUB_SHA="$GITHUB_SHA" \
#           --build-arg GITHUB_REF="$GITHUB_REF" \
#           .
        
#     # Push the Docker image to Google Container Registry
#     - name: Publish
#       run: |-
#         docker push "gcr.io/${{ secrets.GKE_PROJECT }}/${{ env.IMAGE }}:$GITHUB_SHA"

#     # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#         sed -i -e 's/GITHUB_SHA/'"$GITHUB_SHA"'/' ${{ github.workspace }}/.github/manifests/deployment.yaml
#         kubectl apply -f ${{ github.workspace }}/.github/manifests/deployment.yaml
